----
コマンド引数

	Keisan.exe [/R RADIX] [/B BASEMENT] [/D BRACKETED-MIN] OPERAND-1 OPERATOR OPERAND-2 ...

		RADIX ...

			進数を指定します。
			指定できる範囲は 2 〜 256 です。
			デフォルトは 10 です。

		BASEMENT ...

			精度を指定します。
			割り算, べき根, 進数変換のときに小数点以下何桁まで求めるか指定します。
			指定できる範囲は 0 〜 1000000000 です。
			デフォルトは 10 です。
			精度以下の桁は切り捨てます。

			例えば BASEMENT = 5 のとき、2 / 3 を計算すると 0.66666 になります。

		BRACKETED-MIN ...

			計算の結果を文字列で表現するとき "[]" で囲って表現する最小の大きさを指定します。
			指定できる範囲は 0 〜 36 です。
			デフォルトは 36 です。

			例えば、16進数の "abcd" は、BACKETED-MIN = 12 で表現すると "ab[12][13]" になります。

		OPERAND-1 ...

			演算子の左側の数（被演算子）

		OPERATOR ...

			演算子

		OPERAND-2 ...

			演算子の右側の数（被演算子）


		★２つ目の被演算子の後に続けて演算子と被演算子を記述できます。

			> Keisan.exe 1 + 2 + 3 + 4 + 5 + 6 + 7 + 8 + 9 など

			★★★計算の順序は「常に前から後」です。1 + 2 * 3 は 9 になります。


----
演算子

	処理       記号   左項     右項       評価値     精度
	---------------------------------------------------------
	加算       +      多倍長   多倍長     多倍長     丸め無し
	減算       -      多倍長   多倍長     多倍長     丸め無し
	乗算       *      多倍長   多倍長     多倍長     丸め無し
	除算       /      多倍長   多倍長     多倍長     小数点以下 BASEMENT 桁まで
	剰余       M      多倍長   多倍長     多倍長     丸め無し
	べき乗     P      多倍長   10進uint   多倍長     丸め無し
	べき根     R      多倍長   10進uint   多倍長     小数点以下 BASEMENT 桁まで
	対数       L      多倍長   多倍長     10進uint   整数
	進数変換   X      多倍長   10進uint   多倍長     小数点以下 BASEMENT 桁まで

	★'10進uint' は RADIX に関わらず10進数の整数 0 〜 4294967295


----
数字について

	35以下の値は、数字の "0" 〜 "9" アルファベットの "a" 〜 "z" を割り当てます。
	例えば、10進数の "35" を、36進数で表すと "z" になります。

	36以上の値は、10進数で表した値の大きさを "[]" で囲って表記します。
	この表記を使うと "0" は "[0]"、16進数の "f" は "[15]" になります。
	10進数の "255" を、256進数で表すと "[255]" になります。
	10進数の "16776957" を、256進数で表すと "[255][254][253]" になります。


----
メモリ

	演算子に = を指定すると、直後のパラメータの名前で計算結果を記憶します。
	ロードするときは、被演算子に「"@" + 名前」を指定します。
	計算結果を記憶した後、新しく計算を始めるには ; を間に入れます。

	例えば（１２×３４）＋（５６÷７８）を計算したいときは以下のようにします。

		> Keisan.exe 12 * 34 = L ; 56 / 79 = R ; @L + @R

	または

		> Keisan.exe 56 / 79 = R ; 12 * 34 + @R


----
被演算子の入れ替え

	演算子の前に ! を入れると前後の演算項を入れ替えます。
	例えば、123 !/ 456 は 456 / 123 と同じです。

	１２−３４÷（５６＋７８）を計算したいときは以下のようにします。

		> Keisan.exe 56 + 78 !/ 34 !- 12


----
入出力ファイルを使用する。

	Keisan.exe //F 入力ファイル //o 出力ファイル

		入力ファイル ... コマンド引数を記述したファイル
		出力ファイル ... 計算結果を出力するファイル


	●実行例

	テキストファイル 1.txt に以下の内容を記述します。

		123
		+
		456

	以下のコマンドを実行します。

		> Keisan.exe //F 1.txt //o 2.txt

	テキストファイル 2.txt に以下の内容が出力されています。

		579


----
実行例

	３の５００乗を求める。

		> Keisan.exe 3 p 500

	８進数「７７７」を１２進数で表示する。

		> Keisan.exe /r 8 777 x 12

	２の平方根を小数点以下１０００桁まで求める。(たぶん数分程度掛かります)

		> Keisan.exe /b 1000 2 r 2


----
BigIntモード

	16進数の整数の計算を行います。
	通常モードより多少速いはず。

	Keisan.exe /H BIG-INT-1 OPERATOR BIG-INT-2 [BIG-INT-3] ...

		BIG-INT-1 ... 16進数の整数
		OPERATOR  ... 演算子
		BIG-INT-2 ... 16進数の整数
		BIG-INT-3 ... 16進数の整数

	演算子は以下のとおり

		+ ... 加算
		- ... 減算
		* ... 乗算
		/ ... 除算
		M ... 剰余
		P ... べき乗
		O ... BIG-INT-3を法とするべき乗


	●実行例

	３の１６０乗

		> Keisan.exe /h 3 p a0


----
ソースコード

	1. GitHub

		https://github.com/stackprobe/Factory/blob/master/Program/TCalc/Keisan.c

	2. アーカイブ

		以下の場所からダウンロードできます。
		当該コードは <Factory.zip>\Program\TCalc\Keisan.c から辿って下さい。

		http://stackprobe.dip.jp/_kit/Factory

