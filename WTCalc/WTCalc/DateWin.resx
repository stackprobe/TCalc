<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <metadata name="MainTimer.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>17, 17</value>
  </metadata>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        AAABAAMAEBAQAAEABAAoAQAANgAAACAgEAABAAQA6AIAAF4BAAAwMBAAAQAEAGgGAABGBAAAKAAAABAA
        AAAgAAAAAQAEAAAAAADAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAIAAAIAAAACAgACAAAAAgACAAICA
        AADAwMAAgICAAAAA/wAA/wAAAP//AP8AAAD/AP8A//8AAP///wDu7u7u7u7u7uRERERERERO5Lu7u7u0
        u07ku7u7u7S7TuS7u7u7tLtO5ERERERERE7ku7u7u7S7TuRmZmZmZGZO5Lu7u7u0u07ku0u7S7S7TuS7
        S7tLtLtO5LtLu0u0u07ku0u7S7S7TuS7u7u7tLtO5ERERERERE7u7u7u7u7u7gAA//8AAP//AAD//wAA
        //8AAP//AAD//wAA//8AAP//AAD//wAA//8AAP//AAD//wAA//8AAP//AAD//wAA//8oAAAAIAAAAEAA
        AAABAAQAAAAAAIACAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAgAAAgAAAAICAAIAAAACAAIAAgIAAAMDA
        wACAgIAAAAD/AAD/AAAA//8A/wAAAP8A/wD//wAA////AO7u7u7u7u7u7u7u7u7u7u7u7u7u7u7u7u7u
        7u7u7u7u7kRERERERERERERERERE7u5ERERERERERERERERERO7uRLu7u7u7u7u7u0S7u0Tu7kS7u7u7
        u7u7u7tEu7tE7u5Eu7u7u7u7u7u7RLu7RO7uRLu7u7u7u7u7u0S7u0Tu7kS7u7u7u7u7u7tEu7tE7u5E
        u7u7u7u7u7u7RLu7RO7uRERERERERERERERERETu7kRERERERERERERERERE7u5Eu7u7u7u7u7u7RLu7
        RO7uRLu7u7u7u7u7u0S7u0Tu7kRmZmZmZmZmZmZEZmZE7u5EZmZmZmZmZmZmRGZmRO7uRLu7u7u7u7u7
        u0S7u0Tu7kS7u7u7u7u7u7tEu7tE7u5Eu7tEu7u7RLu7RLu7RO7uRLu7RLu7u0S7u0S7u0Tu7kS7u0S7
        u7tEu7tEu7tE7u5Eu7tEu7u7RLu7RLu7RO7uRLu7RLu7u0S7u0S7u0Tu7kS7u0S7u7tEu7tEu7tE7u5E
        u7tEu7u7RLu7RLu7RO7uRLu7RLu7u0S7u0S7u0Tu7kS7u7u7u7u7u7tEu7tE7u5Eu7u7u7u7u7u7RLu7
        RO7uRERERERERERERERERETu7kRERERERERERERERERE7u7u7u7u7u7u7u7u7u7u7u7u7u7u7u7u7u7u
        7u7u7u7uAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAoAAAAMAAAAGAAAAABAAQAAAAAAAAGAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        gAAAgAAAAICAAIAAAACAAIAAgIAAAMDAwACAgIAAAAD/AAD/AAAA//8A/wAAAP8A/wD//wAA////AO7u
        7u7u7u7u7u7u7u7u7u7u7u7u7u7u7u7u7u7u7u7u7u7u7u7u7u7u7u7u7u7u7u5ERERERERERERERERE
        RERERERERERE7u5ERERERERERERERERERERERERERERE7u5ERERERERERERERERERERERERERERE7u5E
        S7u7u7u7u7u7u7u7u7u0RLu7u7RE7u5ES7u7u7u7u7u7u7u7u7u0RLu7u7RE7u5ES7u7u7u7u7u7u7u7
        u7u0RLu7u7RE7u5ES7u7u7u7u7u7u7u7u7u0RLu7u7RE7u5ES7u7u7u7u7u7u7u7u7u0RLu7u7RE7u5E
        S7u7u7u7u7u7u7u7u7u0RLu7u7RE7u5ES7u7u7u7u7u7u7u7u7u0RLu7u7RE7u5ES7u7u7u7u7u7u7u7
        u7u0RLu7u7RE7u5ERERERERERERERERERERERERERERE7u5ERERERERERERERERERERERERERERE7u5E
        RERERERERERERERERERERERERERE7u5ES7u7u7u7u7u7u7u7u7u0RLu7u7RE7u5ES7u7u7u7u7u7u7u7
        u7u0RLu7u7RE7u5ES7u7u7u7u7u7u7u7u7u0RLu7u7RE7u5ERmZmZmZmZmZmZmZmZmZkRGZmZmRE7u5E
        RmZmZmZmZmZmZmZmZmZkRGZmZmRE7u5ERmZmZmZmZmZmZmZmZmZkRGZmZmRE7u5ES7u7u7u7u7u7u7u7
        u7u0RLu7u7RE7u5ES7u7u7u7u7u7u7u7u7u0RLu7u7RE7u5ES7u7u7u7u7u7u7u7u7u0RLu7u7RE7u5E
        S7u7u7u7u7u7u7u7u7u0RLu7u7RE7u5ES7u7tES7u7u7u0RLu7u0RLu7u7RE7u5ES7u7tES7u7u7u0RL
        u7u0RLu7u7RE7u5ES7u7tES7u7u7u0RLu7u0RLu7u7RE7u5ES7u7tES7u7u7u0RLu7u0RLu7u7RE7u5E
        S7u7tES7u7u7u0RLu7u0RLu7u7RE7u5ES7u7tES7u7u7u0RLu7u0RLu7u7RE7u5ES7u7tES7u7u7u0RL
        u7u0RLu7u7RE7u5ES7u7tES7u7u7u0RLu7u0RLu7u7RE7u5ES7u7tES7u7u7u0RLu7u0RLu7u7RE7u5E
        S7u7tES7u7u7u0RLu7u0RLu7u7RE7u5ES7u7tES7u7u7u0RLu7u0RLu7u7RE7u5ES7u7tES7u7u7u0RL
        u7u0RLu7u7RE7u5ES7u7tES7u7u7u0RLu7u0RLu7u7RE7u5ES7u7u7u7u7u7u7u7u7u0RLu7u7RE7u5E
        S7u7u7u7u7u7u7u7u7u0RLu7u7RE7u5ES7u7u7u7u7u7u7u7u7u0RLu7u7RE7u5ES7u7u7u7u7u7u7u7
        u7u0RLu7u7RE7u5ERERERERERERERERERERERERERERE7u5ERERERERERERERERERERERERERERE7u5E
        RERERERERERERERERERERERERERE7u7u7u7u7u7u7u7u7u7u7u7u7u7u7u7u7u7u7u7u7u7u7u7u7u7u
        7u7u7u7u7u7u7gAAAAAAAP//AAAAAAAA//8AAAAAAAD//wAAAAAAAP//AAAAAAAA//8AAAAAAAD//wAA
        AAAAAP//AAAAAAAA//8AAAAAAAD//wAAAAAAAP//AAAAAAAA//8AAAAAAAD//wAAAAAAAP//AAAAAAAA
        //8AAAAAAAD//wAAAAAAAP//AAAAAAAA//8AAAAAAAD//wAAAAAAAP//AAAAAAAA//8AAAAAAAD//wAA
        AAAAAP//AAAAAAAA//8AAAAAAAD//wAAAAAAAP//AAAAAAAA//8AAAAAAAD//wAAAAAAAP//AAAAAAAA
        //8AAAAAAAD//wAAAAAAAP//AAAAAAAA//8AAAAAAAD//wAAAAAAAP//AAAAAAAA//8AAAAAAAD//wAA
        AAAAAP//AAAAAAAA//8AAAAAAAD//wAAAAAAAP//AAAAAAAA//8AAAAAAAD//wAAAAAAAP//AAAAAAAA
        //8AAAAAAAD//wAAAAAAAP//AAAAAAAA//8AAAAAAAD//w==
</value>
  </data>
</root>